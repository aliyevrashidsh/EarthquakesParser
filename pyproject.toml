[project]
name = "earthquakes-parser"
version = "0.1.0"
description = "A library for searching and parsing earthquake-related content from the web"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
keywords = ["earthquake", "parser", "web-scraping", "nlp"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "pandas>=2.0.0",
    "ddgs>=9.0.0",
    "requests>=2.31.0",
    "trafilatura>=1.6.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
]

[project.optional-dependencies]
s3 = [
    "boto3>=1.28.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "flake8>=6.1.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=23.9.0",
    "isort>=5.12.0",
    "black>=23.7.0",
    "interrogate>=1.5.0",
    "mypy>=1.5.0",
    "pre-commit>=3.5.0",
    "bandit[toml]>=1.7.5",
]

[project.urls]
Homepage = "https://github.com/yourusername/earthquakes-parser"
Repository = "https://github.com/yourusername/earthquakes-parser"
Issues = "https://github.com/yourusername/earthquakes-parser/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["earthquakes_parser"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=earthquakes_parser",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["earthquakes_parser"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "earthquakes_parser/some_module.py",   # Add more modules here
    "earthquakes_parser/experimental/*",   # Add a whole folder
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 80
exclude = ["setup.py", "docs", "build", "tests"]
verbose = 2
quiet = false
whitelist-regex = []
color = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "sandbox"]
skips = ["B101"]  # Skip assert_used check in tests

[tool.flake8]
per-file-ignores = [
    "tests/*.py: D100,D101,D102,D103"
]
