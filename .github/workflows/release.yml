name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  test:
    name: Run Tests Before Release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[dev]"

    - name: Run tests
      run: |
        source .venv/bin/activate
        pytest

    - name: Run linters
      run: |
        source .venv/bin/activate
        black --check earthquakes_parser tests
        isort --check-only earthquakes_parser tests
        flake8 earthquakes_parser tests

  build:
    name: Build Distribution
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.11

    - name: Install build dependencies
      run: |
        uv venv
        uv pip install build

    - name: Build package
      run: |
        source .venv/bin/activate
        python -m build

    - name: Store distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  create-release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Download distribution packages
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    - name: Extract release notes
      id: extract-release-notes
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

        # Extract changelog section for this version
        awk "/## \[$VERSION\]/,/## \[/" CHANGELOG.md | sed '1d;$d' > release_notes.md

        # If no specific notes found, use a default message
        if [ ! -s release_notes.md ]; then
          echo "Release version $VERSION" > release_notes.md
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: release_notes.md
        files: dist/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Uncomment to publish to PyPI
  # publish-to-pypi:
  #   name: Publish to PyPI
  #   needs: create-release
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: pypi
  #     url: https://pypi.org/p/earthquakes-parser
  #   permissions:
  #     id-token: write
  #
  #   steps:
  #   - name: Download distribution packages
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: python-package-distributions
  #       path: dist/
  #
  #   - name: Publish to PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1
